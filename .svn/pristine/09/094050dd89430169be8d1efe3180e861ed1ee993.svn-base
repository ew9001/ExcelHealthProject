package example;



import java.awt.AWTException;

import java.awt.List;
import java.awt.Point;
import java.awt.Robot;

import java.io.File;

import java.io.FileInputStream;
import java.net.MalformedURLException;
import java.net.URL;

import org.openqa.selenium.Capabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import com.sun.glass.ui.Size;

import java.text.SimpleDateFormat;

import java.util.Calendar;

import java.util.NoSuchElementException;

import java.util.concurrent.TimeUnit;



import jxl.Sheet;

import jxl.Workbook;



import org.apache.commons.io.FileUtils;

import org.openqa.selenium.By;

import org.openqa.selenium.OutputType;

import org.openqa.selenium.Rotatable;

import org.openqa.selenium.ScreenOrientation;

import org.openqa.selenium.TakesScreenshot;

import org.openqa.selenium.WebDriver;

import org.openqa.selenium.WebElement;

import org.openqa.selenium.firefox.FirefoxDriver;


@SuppressWarnings("unused")
public class DemoWhereToBuy{
	
	public static final String USERNAME = "earlwillis";
	public static final String AUTOMATE_KEY = "BJu6UbA5V3n3C6WBQQde";
	public static final String URL = "http://" + USERNAME + ":" + AUTOMATE_KEY + "@hub.browserstack.com/wd/hub";
	
	
	
	public WebDriver driver;
	
	
Sheet s;

private StringBuffer verificationErrors = new StringBuffer();

static String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(Calendar.getInstance().getTime());



@BeforeClass
@org.testng.annotations.Parameters(value={"browser","version","platform"})

public void beforeClass(String browser, String version, String platform) throws Exception {
    
	
	DesiredCapabilities capability = new DesiredCapabilities();
	capability.setCapability("platform", platform);
    capability.setCapability("browserName", browser);
    capability.setCapability("browserVersion", version);
    capability.setCapability("Test", "P1");
    capability.setCapability("build", "1.0");
    capability.setCapability("browserstack.debug", "true");
    
    
	System.out.println("Opening Browser  - " + browser + version + platform);
	
    try {
		driver = new RemoteWebDriver(
		  new URL("http://earlwillis:BJu6UbA5V3n3C6WBQQde@hub.browserstack.com/wd/hub"),
		  capability

		  
		);
	} catch (MalformedURLException e) {

		e.printStackTrace();
	}
   //  driver.manage().window().maximize();

}


@Test

public void laodthepage() throws Exception {




driver.get("https://www.coffee-mate.com/");

driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);


driver.findElement(By.id("ctl00_ucFooterMain_hlWhereToBuy")).click();
driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
new Select(driver.findElement(By.id("ctl00_ContentPlaceHolder1_ucProductLocator_ddlCategories"))).selectByVisibleText("Coffee-mate Liquid");    new Select(driver.findElement(By.id("ctl00_ContentPlaceHolder1_ucProductLocator_ddlproducts"))).selectByVisibleText("French Vanilla (16 oz.)");
Thread.sleep(3000);
new Select(driver.findElement(By.id("ctl00_ContentPlaceHolder1_ucProductLocator_ddlproducts"))).selectByVisibleText("French Vanilla (16 oz.)");

driver.findElement(By.id("ctl00_ContentPlaceHolder1_ucProductLocator_txtZipCode")).sendKeys("10003");
new Select(driver.findElement(By.id("ctl00_ContentPlaceHolder1_ucProductLocator_ddlRadius"))).selectByVisibleText("15+ Miles");
driver.findElement(By.id("ctl00_ContentPlaceHolder1_ucProductLocator_btnFindStore")).click();
driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
driver.findElement(By.xpath("//html/body/form/div[3]/div[3]/div/div[2]/div/div[2]/div[3]/div/table/tbody/tr[2]/td[2]/a")).click();
driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
driver.findElement(By.cssSelector("img[alt=\"Continue\"]")).click();
Thread.sleep(5000);






// File scrFile1 = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
// FileUtils.copyFile(scrFile1, new File("Y://Screenshots/PageLoads/" + timeStamp + "/" + row + "-" + myTitle + "-" + "page.png"));

 //       (new Robot()).keyPress(java.awt.event.KeyEvent.VK_ENTER);
 //        (new Robot()).keyRelease(java.awt.event.KeyEvent.VK_ENTER);
 //        } catch (AWTException e) {
               // TODO Auto-generated catch block
 //               e.printStackTrace();
 //           }



}




private void assertEquals(String text, String string) {
	// TODO Auto-generated method stub
	
}


private Object isElementPresent(By cssSelector) {
	// TODO Auto-generated method stub
	return null;
}


@AfterClass

public void tearDown() throws Exception {

 

    driver.quit();

    String verificationErrorString = verificationErrors.toString();

    if (!"".equals(verificationErrorString)) {

      fail(verificationErrorString);

    }

  }


private void fail(String verificationErrorString) {
	// TODO Auto-generated method stub
	
}

}